-- Telescope
require("telescope").setup()

-- Gitsigns
require('gitsigns').setup()

-- Bufferline
require("bufferline").setup({
    options = {
        mode = "buffers",
        offsets = {
            {
                filetype = "NvimTree",
                highlight = "Directory",
                text_align = "left",
            },
        },
        separator_style = "thick",
        diagnostics = "nvim_lsp",
    },
    highlights = {
        buffer_selected = {
            italic = false,
        },
        indicator_selected = {
            fg = { attribute = "fg", highlight = "Function" },
            italic = false,
        },
    },
})

-- Indent Blankline
require("indent_blankline").setup({
    char = "‚ñè",
    show_trailing_blankline_indent = false,
    show_first_indent_level = true,
    use_treesitter = true,
    show_current_context = false,
})

-- Dashboard
local db = require("dashboard")
db.custom_header = {
    "",
    "‚£Ω‚£ø‚¢£‚£ø‚°ü‚£Ω‚£ø‚£ø‚†É‚£≤‚£ø‚£ø‚£∏‚£∑‚°ª‚°á‚£ø‚£ø‚¢á‚£ø‚£ø‚£ø‚£è‚£é‚£∏‚£¶‚£†‚°û‚£æ‚¢ß‚£ø‚£ø",
    "‚£ø‚°è‚£ø‚°ø‚¢∞‚£ø‚£ø‚°è‚£º‚£ø‚£ø‚°è‚†ô‚£ø‚£ø‚£§‚°ø‚£ø‚¢∏‚£ø‚£ø‚¢ü‚°û‚£∞‚£ø‚£ø‚°ü‚£π‚¢Ø‚£ø‚£ø‚£ø",
    "‚°ø‚¢π‚£ø‚†á‚£ø‚£ø‚£ø‚£∏‚£ø‚£ø‚£ø‚£ø‚£¶‚°à‚†ª‚£ø‚£ø‚£Æ‚£ø‚£ø‚£Ø‚£è‚£º‚£ø‚†ø‚†è‚£∞‚°Ö‚¢∏‚£ø‚£ø‚£ø",
    "‚°Ä‚£º‚£ø‚¢∞‚£ø‚£ø‚£á‚£ø‚£ø‚°ø‚†õ‚†õ‚†õ‚†õ‚†Ñ‚£ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£ø‚†ø‚†õ‚¢æ‚°á‚¢∏‚£ø‚£ø‚£ø",
    "‚†Ñ‚£ø‚°ü‚¢∏‚£ø‚£ø‚¢ª‚£ø‚£ø‚£∑‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ã‚†â‚£†‚£¥‚£æ‚£ø‚°á‚£∏‚£ø‚£ø‚°è",
    "‚†Ñ‚£ø‚°á‚¢∏‚£ø‚£ø‚¢∏‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ñ‚†ò‚¢ø‚£ø‚†è‚†Ñ‚£ø‚£ø‚£ø‚£π",
    "‚†Ñ‚¢ª‚°á‚¢∏‚£ø‚£ø‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£º‚†É‚†Ñ‚¢∞‚£ø‚£ø‚¢Ø‚£ø",
    "‚†Ñ‚¢∏‚£ø‚¢∏‚£ø‚£ø‚°Ñ‚†ô‚¢ø‚£ø‚£ø‚°ø‚†Å‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†â‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚†Ñ‚¢Ä‚£æ‚£ø‚¢Ø‚£ø‚£ø",
    "‚£æ‚£∏‚£ø‚†Ñ‚£ø‚£ø‚°á‚†Ñ‚†Ñ‚†ô‚¢ø‚£Ä‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚£∞‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Ñ‚†Ñ‚£º‚°ø‚¢´‚£ª‚£ø‚£ø",
    "‚£ø‚£ø‚£ø‚†Ñ‚¢∏‚£ø‚£ø‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†ô‚†ø‚£∑‚£∂‚£§‚£¥‚£ø‚†ø‚†ø‚†õ‚†â‚†Ñ‚†Ñ‚¢∏‚£ø‚£ø‚£ø‚£ø‚†É‚†Ñ‚£¥ ",
    "",
}
db.custom_center = {
    {
        icon = "Ôë§  ",
        desc = "Recently latest session                  ",
        shortcut = "SPC s l",
        action = "SessionLoad",
    },
    {
        icon = "Ôú°  ",
        desc = "Recently opened files                   ",
        action = "DashboardFindHistory",
        shortcut = "SPC f h",
    },
    {
        icon = "ÔÖú  ",
        desc = "Find  File                              ",
        action = "Telescope find_files find_command=rg,--hidden,--files",
        shortcut = "SPC f f",
    },
    {
        icon = "Ôêì  ",
        desc = "File Browser                            ",
        action = "Telescope file_browser",
        shortcut = "SPC f b",
    },
    {
        icon = "ÔÜö  ",
        desc = "Find  word                              ",
        action = "Telescope live_grep",
        shortcut = "SPC f w",
    },
}
db.custom_footer = {
    "Ludovico Sforza üöÄ",
    "SFORZA FAMIGLIA",
}

-- Lualine
local lualine = require("lualine")
lualine.setup({
    options = {
        icons_enabled = true,
        theme = "palenight",
        component_separators = { left = "ÓÇ±", right = "ÓÇ≥" },
        section_separators = { left = "ÓÇ∞", right = "ÓÇ≤" },
        disabled_filetypes = {
            statusline = {},
            winbar = {},
        },
        ignore_focus = {},
        always_divide_middle = true,
        globalstatus = false,
        refresh = {
            statusline = 1000,
            tabline = 1000,
            winbar = 1000,
        },
    },
    sections = {
        lualine_a = { "mode" },
        lualine_b = { "branch", "diff", "diagnostics" },
        lualine_c = { "filename" },
        lualine_x = { "encoding", "fileformat", "filetype" },
        lualine_y = { "progress" },
        lualine_z = { "location" },
    },
    inactive_sections = {
        lualine_a = {},
        lualine_b = {},
        lualine_c = { "filename" },
        lualine_x = { "location" },
        lualine_y = {},
        lualine_z = {},
    },
    tabline = {},
    winbar = {},
    inactive_winbar = {},
    extensions = { 'nvim-tree' },
})

-- Nvim-Treesitter
require("nvim-treesitter.configs").setup({
    highlight = {
        enable = true,
        additional_vim_regex_highlighting = false,
    },
    -- ensure_installed = { "javascript",
    --     "typescript",
    --     "tsx",
    --     "css",
    --     "rust",
    --     "nix",
    --     "go",
    --     "lua",
    -- },
})

require("nvim-tree").setup({
    sort_by = "case_sensitive",
    view = {
        side = "right",
        adaptive_size = true,
        mappings = {
            list = {
                { key = "u", action = "dir_up" },
            },
        },
    },
    renderer = {
        group_empty = true,
    },
    filters = {
        dotfiles = true,
    },
})

-- Presence ( Discord Rich Presence )
-- require("presence"):setup(
-- 	{
-- 		-- General options
-- 		auto_update = true,
-- 		neovim_image_text = "The One True Text Editor",
-- 		main_image = "neovim",
-- 		client_id = "793271441293967371",
-- 		log_level = nil,
-- 		debounce_timeout = 10,
-- 		enable_line_number = false,
-- 		blacklist = {},
-- 		buttons = true,
-- 		file_assets = {},
-- 		show_time = true,
-- 		-- Rich Presence text options
-- 		editing_text = "Editing %s",
-- 		file_explorer_text = "Browsing %s",
-- 		git_commit_text = "Committing changes",
-- 		plugin_manager_text = "Managing plugins",
-- 		reading_text = "Reading %s",
-- 		workspace_text = "Working on %s",
-- 		line_number_text = "Line %s out of %s"
-- 	}
-- )

-- Nvim-Web-DevIcons
require("nvim-web-devicons").setup({
    color_icons = true,
    default = true,
})
